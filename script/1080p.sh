#!/usr/bin/env bash
# install-global-resolution.sh
# Массово и постоянно задаёт нужное разрешение (по умолчанию 1920x1080@60)
# Работает для Xorg: xorg.conf.d + DM hooks (LightDM/SDDM/GDM Xorg) + ~/.xprofile
set -euo pipefail

# ---- ПАРАМЕТРЫ ----
W="${W:-1920}"
H="${H:-1080}"
R="${R:-60}"                     # Гц
MODE_NAME="${W}x${H}_${R}.00"
XORG_CONF_DIR="/etc/X11/xorg.conf.d"
BIN_APPLY="/usr/local/bin/set-resolution-apply.sh"
LIGHTDM_DIR="/etc/lightdm/lightdm.conf.d"
SDDM_DIR="/etc/sddm.conf.d"
GDM_INIT="/etc/gdm/Init/Default"         # Arch/Manjaro
GDM3_INIT="/etc/gdm3/Init/Default"       # Debian/Ubuntu
HEADER="# AUTOGENERATED by install-global-resolution.sh"

# ---- ПРОВЕРКИ ----
need() { command -v "$1" >/dev/null 2>&1 || { echo "[-] Требуется $1"; exit 1; }; }
need xrandr
CVT_OK=0; command -v cvt >/dev/null 2>&1 && CVT_OK=1

SESSION_TYPE="${XDG_SESSION_TYPE:-x11}"
if [[ "$SESSION_TYPE" != "x11" ]]; then
  echo "[!] Сейчас Wayland (${SESSION_TYPE}). Добавление новых mode через xrandr невозможно."
  echo "    Запусти под Xorg для автогенерации конфигов, либо настраивай композитор (sway/hyprland)."
  echo "    Скрипт продолжит, но xrandr-применение в этой сессии может быть пропущено."
fi

# ---- ПОЛУЧАЕМ МОДЕЛАЙН ----
if [[ "$CVT_OK" -eq 1 ]]; then
  # Забираем имя и параметры
  read -r _ NAME REST < <(cvt "$W" "$H" "$R" | awk '/Modeline/{print $1, $2, substr($0, index($0,$3))}')
  NAME="${NAME//\"/}"  # убрать кавычки
  MODELINE_NAME="$NAME"
  MODELINE_REST="$REST"
else
  # Фолбэк для 1920x1080@60 (если нет cvt)
  if [[ "$W" != "1920" || "$H" != "1080" || "$R" != "60" ]]; then
    echo "[-] Нет утилиты cvt. Поставь пакет (xorg-xrandr + xorg-cvt) или используй 1920x1080@60."
    exit 1
  fi
  MODELINE_NAME="1920x1080_60.00"
  MODELINE_REST="173.00 1920 2048 2248 2576 1080 1083 1088 1120 -hsync +vsync"
fi

# ---- НАЙДЁМ ВЫХОДЫ ----
OUTS="$(xrandr | awk '/ connected/{print $1}')"
if [[ -z "$OUTS" ]]; then
  echo "[-] Не найдено подключённых выходов (xrandr). Открой Xorg-сессию и повтори."
  exit 1
fi
echo "[i] Подключённые выходы: $OUTS"
echo "[i] Модель: $MODELINE_NAME $MODELINE_REST"

# ---- СОЗДАЁМ apply-скрипт (юзается DM и пользователем) ----
install -m 0755 /dev/null "$BIN_APPLY"
cat >"$BIN_APPLY" <<EOF
#!/usr/bin/env bash
$HEADER
export DISPLAY="\${DISPLAY:-:0}"
MODE_NAME="$MODELINE_NAME"
MODE_REST="$MODELINE_REST"
OUTS="$OUTS"

# Объявляем режим глобально (молча если уже есть)
xrandr --newmode "\$MODE_NAME" \$MODE_REST 2>/dev/null || true

for o in \$OUTS; do
  xrandr --addmode "\$o" "\$MODE_NAME" 2>/dev/null || true
  xrandr --output "\$o" --mode "\$MODE_NAME" 2>/dev/null || true
done
EOF
echo "[+] $BIN_APPLY создан"

# ---- Xorg persistent: xorg.conf.d/10-monitor-*.conf ----
mkdir -p "$XORG_CONF_DIR"
for o in $OUTS; do
  CONF="$XORG_CONF_DIR/10-monitor-$o.conf"
  cat >"$CONF" <<EOF
$HEADER
Section "Monitor"
    Identifier "$o"
    Modeline "$MODELINE_NAME" $MODELINE_REST
    Option "PreferredMode" "$MODELINE_NAME"
EndSection
EOF
  chmod 0644 "$CONF"
  echo "[+] $CONF"
done

# ---- LightDM hook ----
if systemctl list-unit-files | grep -q '^lightdm\.service'; then
  mkdir -p "$LIGHTDM_DIR"
  cat >"$LIGHTDM_DIR/10-resolution.conf" <<EOF
$HEADER
[Seat:*]
display-setup-script=$BIN_APPLY
greeter-setup-script=$BIN_APPLY
EOF
  chmod 0644 "$LIGHTDM_DIR/10-resolution.conf"
  echo "[+] LightDM hook: $LIGHTDM_DIR/10-resolution.conf"
fi

# ---- SDDM hook ----
if systemctl list-unit-files | grep -q '^sddm\.service'; then
  mkdir -p "$SDDM_DIR"
  cat >"$SDDM_DIR/10-resolution.conf" <<EOF
$HEADER
[General]
DisplayCommand=$BIN_APPLY
DisplayStopCommand=:
EOF
  chmod 0644 "$SDDM_DIR/10-resolution.conf"
  echo "[+] SDDM hook: $SDDM_DIR/10-resolution.conf"
fi

# ---- GDM (Xorg) hook ----
hook_gdm() {
  local target="\$1"
  [[ -f "\$target" ]] || { echo "[i] Пропускаю \$target (нет файла)"; return; }
  if ! grep -q "$HEADER" "\$target" 2>/dev/null; then
    cp "\$target" "\$target.bak.$(date +%F-%H%M%S)"
    sed -i "1a $HEADER\n$BIN_APPLY || true\n" "\$target"
    echo "[+] GDM hook: \$target (бэкап сохранён)"
  else
    echo "[i] GDM hook уже установлен в \$target"
  fi
}

if systemctl list-unit-files | grep -q '^gdm\.service'; then
  hook_gdm "$GDM_INIT"
  hook_gdm "$GDM3_INIT"
fi

# ---- Пользовательский автозапуск (на всякий) ----
USR_XPROFILE="${HOME}/.xprofile"
if [[ -w "${HOME}" ]]; then
  if [[ ! -f "$USR_XPROFILE" ]]; then
    echo -e "$HEADER\n$BIN_APPLY &" > "$USR_XPROFILE"
    chmod 0644 "$USR_XPROFILE"
    echo "[+] Добавлен $USR_XPROFILE"
  elif ! grep -q "$BIN_APPLY" "$USR_XPROFILE"; then
    printf "\n$HEADER\n$BIN_APPLY &\n" >> "$USR_XPROFILE"
    echo "[+] Обновлён $USR_XPROFILE"
  else
    echo "[i] В $USR_XPROFILE уже есть вызов $BIN_APPLY"
  fi
fi

# ---- Немедленно применяем (если Xorg) ----
if [[ "$SESSION_TYPE" == "x11" ]]; then
  bash "$BIN_APPLY" || true
fi

echo "[✓] Готово. Перелогин или ребут применит всё повсюду."
echo "    Разрешение: ${W}x${H}@${R}  | Модель: $MODELINE_NAME"
